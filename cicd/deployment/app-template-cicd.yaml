apiVersion: v1
kind: Template
labels:
  app: ${APPLICATION_NAME}
objects:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        volumes:
        - name: "data-at-rest-crypto"
          secret:
            defaultMode: 420
            secretName: "data-at-rest-crypto-keys"
        - name: "kafka-authentication"
          secret:
            defaultMode: 420
            secretName: "kafka-authentication"
        containers:
        - image: ${OPENSHIFT_DOCKER_REGISTRY_URL}/${PROJECT_NAME}/${IMAGE_STREAM_NAME}:${TAG_NAME}
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8081
            protocol: TCP
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health/liveness
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 240
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health/readiness
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 60
          resources:
            requests: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - name: "data-at-rest-crypto"
              readOnly: true
              mountPath: "/etc/secrets/data-at-rest"
            - name: "kafka-authentication"
              readOnly: true
              mountPath: "/etc/secrets/kafka-authentication"
          env:
          - name: SPRING_APPLICATION_NAME
            value: ${APPLICATION_NAME}
          - name: SPRING_APPLICATION_JSON
            value: '{"server":{"undertow":{"io-threads":1, "worker-threads":2 }}}'
          - name: DATA_AT_REST_KEYSTORE_PW
            valueFrom:
              secretKeyRef:
                name: data-at-rest-crypto-keys
                key: keyStorePassword
          - name: USER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: kafka-authentication
                key: user.password
          - name: CA_PASSWORD
            valueFrom:
              secretKeyRef:
                name: kafka-authentication
                key: ca.password
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers: []
- apiVersion: v1
  kind: Service
  metadata:
    name: ${APPLICATION_NAME}
  spec:
    ports:
      - name: 8080-tcp
        port: 8080
        protocol: TCP
        targetPort: 8080
    selector:
      deploymentconfig: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
parameters:
- description: Name of the project where the application has to be deployed
  displayName: Project name
  name: PROJECT_NAME
  required: true
- description: Name of the application
  displayName: Application name
  name: APPLICATION_NAME
  required: true
- description: Name of the image stream where to pull the docker image from (with no tag)
  displayName: Image stream name
  name: IMAGE_STREAM_NAME
  required: true
- description: Tag of the image stream to deploy as the version of the application for this deployment
  displayName: Tag name
  name: TAG_NAME
  required: true
- description: Openshift internal docker registry url
  displayName: Openshift Internal Registry URL
  name: OPENSHIFT_DOCKER_REGISTRY_URL
  required: true
